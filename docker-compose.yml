services:
  db:
    image: postgres:16-alpine
    container_name: vacancies_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  app:
    build: .
    container_name: vacancies_app
    # Используем длинный синтаксис для монтирования, чтобы исключить .venv
    volumes:
      - type: bind
        source: .
        target: /app
      # Создаем анонимный том для .venv внутри контейнера,
      # чтобы он не пересекался с локальным .venv.
      - /app/.venv
    ports:
      - "8076:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
